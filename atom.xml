<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Crane&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-22T02:59:57.180Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mhp</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>v2ray+nginx科学上网教程</title>
    <link href="http://yoursite.com/2020/06/20/v2ray-nginx%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/06/20/v2ray-nginx%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B/</id>
    <published>2020-06-20T14:01:17.000Z</published>
    <updated>2020-06-22T02:59:57.180Z</updated>
    
    <content type="html"><![CDATA[<h3 id="00x1"><a href="#00x1" class="headerlink" title="00x1"></a>00x1</h3><p>首先要有一台国外VPS和一个域名。vps开启80,443端口，域名正确解析到服务器。</p><h3 id="00x2-安装nginx"><a href="#00x2-安装nginx" class="headerlink" title="00x2 安装nginx"></a>00x2 安装nginx</h3><p>登录服务器，这里以系统Ubuntu16.04为例。</p><p>更新apt</p><p><code>sudo apt-get update</code></p><p>安装nginx</p><p><code>sudo apt-get install nginx</code></p><p>到/etc/nginx/conf.d/目录下，新建v2ray.conf文件，并输入以下内容。“你的域名”处填写域名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">                listen  80;</span><br><span class="line">                root            &#x2F;var&#x2F;www&#x2F;html&#x2F;;</span><br><span class="line">                index           index.html index.htm;</span><br><span class="line">                server_name     你的域名;  </span><br><span class="line">                rewrite ^(.*)$  https:&#x2F;&#x2F;$host$1 permanent;</span><br><span class="line"> &#125;</span><br><span class="line">server &#123;</span><br><span class="line">                listen  443 ssl;</span><br><span class="line">                root            &#x2F;var&#x2F;www&#x2F;html&#x2F;;</span><br><span class="line">                index           index.html index.htm;</span><br><span class="line">                server_name     你的域名;   </span><br><span class="line">                ssl_certificate      ;  </span><br><span class="line">                ssl_certificate_key   ; </span><br><span class="line">                ssl_protocols TLSv1.2;</span><br><span class="line">                ssl_ciphers   ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span><br><span class="line">                location &#x2F;abc &#123;       </span><br><span class="line">                        proxy_redirect off;</span><br><span class="line">                        proxy_pass http:&#x2F;&#x2F;127.0.0.1:60001;  </span><br><span class="line">                        proxy_http_version 1.1;</span><br><span class="line">                        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">                        proxy_set_header Host $http_host;</span><br><span class="line">                        access_log off;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="00x3-安装BBR加速内核"><a href="#00x3-安装BBR加速内核" class="headerlink" title="00x3 安装BBR加速内核"></a>00x3 安装BBR加速内核</h3><p>BBR是Google推出的一套拥塞控制算法，集成在最新的Linux内核中。BBR应用在VPS服务器上，可以明显改善服务器的网络传输速度，减少丢包。</p><p>一键脚本安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O tcp.sh https:&#x2F;&#x2F;github.com&#x2F;cx9208&#x2F;Linux-NetSpeed&#x2F;raw&#x2F;master&#x2F;tcp.sh &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</span><br></pre></td></tr></table></figure><p>运行tcp.sh<br>首先选择2，安装BBRplus版内核，Ubuntu16.04自带内核版本不支持bbr所以先要升级。一键安装内核并重启之后，再运行脚本则会显示当前状态：已安装BBRplus。然后再选择7，使用BBRplus版加速。会显示BBRplus启动成功。</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/1.png" alt=""></p><p>可用 <code>lsmod | grep bbr</code> 命令验证是否启动成功。如果有连接数，即启动成功</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/2.png" alt=""></p><h3 id="00x4-安装v2ray"><a href="#00x4-安装v2ray" class="headerlink" title="00x4 安装v2ray"></a>00x4 安装v2ray</h3><p>一键脚本安装</p><p><code>bash &lt;(curl -s -L https://install.direct/go.sh)</code></p><p>修改配置文件 /etc/v2ray/config.json，修改为以下内容。其中id参数可由客户端生成，也可用网上其他方式生成，只要服务端和客户端保持一致即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;log&quot; : &#123;</span><br><span class="line">    &quot;access&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;access.log&quot;,</span><br><span class="line">    &quot;error&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;error.log&quot;,</span><br><span class="line">    &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;inbound&quot;: &#123;</span><br><span class="line">    &quot;port&quot;: 60001, &#x2F;&#x2F;(此端口与nginx配置相关)</span><br><span class="line">    &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;</span><br><span class="line">      &quot;clients&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;id&quot;: &quot;xxxx&quot;, </span><br><span class="line">          &quot;level&quot;: 1,</span><br><span class="line">          &quot;alterId&quot;: 64 一致</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">   &quot;streamSettings&quot;:&#123;</span><br><span class="line">      &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">      &quot;wsSettings&quot;: &#123;</span><br><span class="line">           &quot;path&quot;: &quot;&#x2F;abc&quot; </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;outbound&quot;: &#123;</span><br><span class="line">    &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;outboundDetour&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">      &quot;tag&quot;: &quot;blocked&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存之后之后重启v2ray。</p><p><code>service v2ray restart</code></p><h3 id="00x5-安装ssl证书"><a href="#00x5-安装ssl证书" class="headerlink" title="00x5 安装ssl证书"></a>00x5 安装ssl证书</h3><p>安装之前先把nginx服务停掉。<br><code>service nginx stop</code></p><p>新建一个文件夹，并下载安装脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir certauto</span><br><span class="line">cd &#x2F;certauto</span><br><span class="line">wget https:&#x2F;&#x2F;dl.eff.org&#x2F;certbot-auto</span><br><span class="line">chmod +x .&#x2F;certbot-auto</span><br></pre></td></tr></table></figure><p>执行安装命令，邮箱和域名填写自己的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;certbot-auto certonly --email XXX@163.com -d www.xxx.cn</span><br></pre></td></tr></table></figure><p>安装过程，这里选2，启动一个临时web服务器</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/3.png" alt=""></p><p>后面的就选同意<br><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/4.png" alt=""></p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/5.png" alt=""></p><p>没问题就会显示安装成功。有问题可能是端口占用问题，起临时web服务器需要使用80端口。<br><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/6.png" alt=""></p><p>图中两个pem文件就是证书文件，把完整链接复制到/etc/nginx/conf.d/v2ray.conf文件中如图位置。保存文件。</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/7.png" alt=""></p><p>重启nginx和v2ray，然后再去访问你的域名，看到如下页面证明前面的都安装成功。</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/8.png" alt=""></p><h3 id="00x6-客户端配置"><a href="#00x6-客户端配置" class="headerlink" title="00x6 客户端配置"></a>00x6 客户端配置</h3><p>客户端下载：<br><a href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="noopener">https://github.com/2dust/v2rayN/releases</a></p><p>客户端配置：<br>选择，服务器-&gt;添加VMess服务器。地址填写域名、用户id可以自动生成，并将id填写到/etc/v2ray/config.json文件id参数处、额外id填64、传输协议选ws、路径填/abc，与v2ray.conf文件中location处参数一致即可、其他的可照图片配置。点确定后即可自动启动。如果配置都没问题即可在信息处看到访问记录信息。</p><p><img src="/images/1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/9.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;00x1&quot;&gt;&lt;a href=&quot;#00x1&quot; class=&quot;headerlink&quot; title=&quot;00x1&quot;&gt;&lt;/a&gt;00x1&lt;/h3&gt;&lt;p&gt;首先要有一台国外VPS和一个域名。vps开启80,443端口，域名正确解析到服务器。&lt;/p&gt;
&lt;h3 id=&quot;00x2-安装
      
    
    </summary>
    
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="科学上网" scheme="http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
</feed>
